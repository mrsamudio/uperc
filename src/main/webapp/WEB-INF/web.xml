<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">


	<!-- Descripcion general de la aplicacion web -->

	<display-name>uperc</display-name>
	<description>
		Esta es la versión 0.0.1 del sistema que gestiona los
		parqueaderos de la Universidad de Cundinamarca sede Chía, basado en
		servlets y en páginas JSP. Fué escrita por el
		estudiante Mario Samudio
		(mrsamudio@ucundinamarca.edu.co), con quien
		debería contactar para más
		información.
	</description>

	<absolute-ordering />

	<!-- configuracion del despachador de servicio -->
	<servlet>
		<servlet-name>uperc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-conf.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>



	<!-- ubicacion del url del servlet -->
	<servlet-mapping>
		<servlet-name>uperc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- <welcome-file-list> -->
	<!-- <welcome-file>/WEB-INF/vistas/InicioDeSesion.jsp</welcome-file> -->
	<!-- </welcome-file-list> -->

	<!-- Parámetros de inicialización de contexto que definen las constantes 
		de cadena compartidas utilizadas dentro de su aplicación, que puede personalizar 
		el administrador del sistema que está instalando su aplicación. Los valores 
		realmente asignados a estos parámetros se pueden recuperar en un servlet 
		o página JSP llamando a: String value = getServletContext().GetInitParameter("nombre"); 
		donde "nombre" coincide con el elemento <param-name> de uno de estos parámetros 
		de inicialización. Puede definir cualquier número de parámetros de inicialización 
		de contexto, incluido cero. -->

	<!-- <servlet> -->
	<!-- <servlet-name>controller</servlet-name> -->
	<!-- <description> -->
	<!-- Este servlet desempeña el papel de "controlador" en la -->
	<!-- arquitectura MVC -->
	<!-- utilizada en esta aplicación. Por lo general, se -->
	<!-- asigna a la -->
	<!-- extensión de nombre de archivo ".do" con un elemento de -->
	<!-- asignación de -->
	<!-- servlet, y todos los formularios enviados en la -->
	<!-- aplicación se -->
	<!-- enviarán a un URI de solicitud como "saveCustomer.do", -->
	<!-- que, por lo -->
	<!-- tanto, se asignará a este servlet. Los nombres de los -->
	<!-- parámetros de -->
	<!-- inicialización para este servlet son la "ruta del -->
	<!-- servlet" que -->
	<!-- recibirá este servlet (después de eliminar la extensión -->
	<!-- del nombre de -->
	<!-- archivo). El valor correspondiente es el nombre de la -->
	<!-- clase de acción -->
	<!-- que se utilizará para procesar esta solicitud. -->
	<!-- </description> -->
	<!-- <servlet-class>co.edu.ucundinamarca.uperc.ControllerServlet</servlet-class> -->
	<!-- <init-param> -->
	<!-- <param-name>listOrders</param-name> -->
	<!-- <param-value>co.edu.ucundinamarca.uperc.ListOrdersAction</param-value> -->
	<!-- </init-param> -->
	<!-- <init-param> -->
	<!-- <param-name>saveCustomer</param-name> -->
	<!-- <param-value>co.edu.ucundinamarca.uperc.SaveCustomerAction</param-value> -->
	<!-- </init-param> -->
	<!-- <load-on-startup>5</load-on-startup> -->
	<!-- </servlet> -->
	<!-- Load this servlet at server startup time -->

	<!-- <servlet> -->
	<!-- <servlet-name>graph</servlet-name> -->
	<!-- <description> -->
	<!-- This servlet produces GIF images that are dynamically -->
	<!-- generated -->
	<!-- graphs, based on the input parameters included on the -->
	<!-- request. -->
	<!-- It is generally mapped to a specific request URI like -->
	<!-- "/graph". -->
	<!-- </description> -->
	<!-- <servlet-class>co.edu.ucundinamarca.uperc.Graph</servlet-class> -->
	<!-- <init-param> -->
	<!-- <param-name>listOrders</param-name> -->
	<!-- <param-value>co.edu.ucundinamarca.uperc.ListOrdersAction</param-value> -->
	<!-- </init-param> -->
	<!-- <init-param> -->
	<!-- <param-name>saveCustomer</param-name> -->
	<!-- <param-value>co.edu.ucundinamarca.uperc.SaveCustomerAction</param-value> -->
	<!-- </init-param> -->
	<!-- <load-on-startup>5</load-on-startup> -->
	<!-- </servlet> -->


	<!-- Define mappings that are used by the servlet container to translate 
		a particular request URI (context-relative) to a particular servlet. The 
		examples below correspond to the servlet descriptions above. Thus, a request 
		URI like: http://localhost:8080/{contextpath}/graph will be mapped to the 
		"graph" servlet, while a request like: http://localhost:8080/{contextpath}/saveCustomer.do 
		will be mapped to the "controller" servlet. You may define any number of 
		servlet mappings, including zero. It is also legal to define more than one 
		mapping for the same servlet, if you wish to. -->

	<!-- <servlet-mapping> -->
	<!-- <servlet-name>controller</servlet-name> -->
	<!-- <url-pattern>*.do</url-pattern> -->
	<!-- </servlet-mapping> -->

	<!-- <servlet-mapping> -->
	<!-- <servlet-name>graph</servlet-name> -->
	<!-- <url-pattern>/graph</url-pattern> -->
	<!-- </servlet-mapping> -->


	<!-- Define the default session timeout for your application, in minutes. 
		From a servlet or JSP page, you can modify the timeout for a particular session 
		dynamically by using HttpSession.getMaxInactiveInterval(). -->

	<!-- <session-config> -->
	<!-- <session-timeout>30</session-timeout> 30 minutes -->
	<!-- </session-config> -->


	<!-- aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa -->

</web-app>
